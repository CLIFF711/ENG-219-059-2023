{
  "nbformat": 4,
  "nbformat_minor": 0,
  "metadata": {
    "colab": {
      "provenance": [],
      "authorship_tag": "ABX9TyNv/tHSMONTEjYpdq6fxPrP",
      "include_colab_link": true
    },
    "kernelspec": {
      "name": "python3",
      "display_name": "Python 3"
    },
    "language_info": {
      "name": "python"
    }
  },
  "cells": [
    {
      "cell_type": "markdown",
      "metadata": {
        "id": "view-in-github",
        "colab_type": "text"
      },
      "source": [
        "<a href=\"https://colab.research.google.com/github/CLIFF711/ENG-219-059-2023/blob/main/assignment%202\" target=\"_parent\"><img src=\"https://colab.research.google.com/assets/colab-badge.svg\" alt=\"Open In Colab\"/></a>"
      ]
    },
    {
      "cell_type": "code",
      "execution_count": 1,
      "metadata": {
        "id": "etAEC021mZqk"
      },
      "outputs": [],
      "source": [
        "# TODO: Complete the function\n",
        "def get_expected_cost(beds, baths):\n",
        "    value = 80000 + beds*30000 + baths*10000\n",
        "    return value"
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "# TODO: Use the get_expected_cost function to fill in each value\n",
        "option_one =  80000 + 2*30000 + 3*10000\n",
        "option_two = 80000 + 3*30000 + 2*10000\n",
        "option_three = 80000 + 3*30000 + 3*10000\n",
        "option_four =  80000 + 3*30000 + 4*10000\n",
        "\n",
        "print(option_one)\n",
        "print(option_two)\n",
        "print(option_three)\n",
        "print(option_four)"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "DoRbq0BXmqm0",
        "outputId": "af605186-041a-47ec-b47f-41688335bbd8"
      },
      "execution_count": 2,
      "outputs": [
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            "170000\n",
            "190000\n",
            "200000\n",
            "210000\n"
          ]
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "def get_cost(sqft_walls, sqft_ceiling, sqft_per_gallon, cost_per_gallon):\n",
        "    total_sqft = sqft_walls + sqft_ceiling\n",
        "    gallons_needed  = total_sqft / sqft_per_gallon\n",
        "    cost = cost_per_gallon * gallons_needed\n",
        "    return cost"
      ],
      "metadata": {
        "id": "qyjGltaYnIo0"
      },
      "execution_count": 5,
      "outputs": []
    },
    {
      "cell_type": "code",
      "source": [
        "# TODO: Set the project_cost variable to the cost of the project\n",
        "project_cost = get_cost(432, 144, 400, 15)"
      ],
      "metadata": {
        "id": "PLeIfbYrnabt"
      },
      "execution_count": 6,
      "outputs": []
    },
    {
      "cell_type": "code",
      "source": [
        "def get_actual_cost (total_sqft):\n",
        "    sqft_walls = sqft_ceiling = 0 # adding placeholders, otherwise it will throw an error later\n",
        "    gallons_needed = (total_sqft / 400)\n",
        "    gallons_to_buy = math.ceil(gallons_needed)\n",
        "    cost = 15 * gallons_to_buy\n",
        "    return cost\n",
        "    cost = 15 * gallons_to_buy\n",
        "    return cost"
      ],
      "metadata": {
        "id": "3aWwfbMmngVg"
      },
      "execution_count": 9,
      "outputs": []
    }
  ]
}